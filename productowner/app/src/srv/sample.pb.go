// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sample.proto

package sample

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ProductOwnerRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProductOwnerRequest) Reset()         { *m = ProductOwnerRequest{} }
func (m *ProductOwnerRequest) String() string { return proto.CompactTextString(m) }
func (*ProductOwnerRequest) ProtoMessage()    {}
func (*ProductOwnerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2141552de9bf11d0, []int{0}
}

func (m *ProductOwnerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProductOwnerRequest.Unmarshal(m, b)
}
func (m *ProductOwnerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProductOwnerRequest.Marshal(b, m, deterministic)
}
func (m *ProductOwnerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProductOwnerRequest.Merge(m, src)
}
func (m *ProductOwnerRequest) XXX_Size() int {
	return xxx_messageInfo_ProductOwnerRequest.Size(m)
}
func (m *ProductOwnerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ProductOwnerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ProductOwnerRequest proto.InternalMessageInfo

func (m *ProductOwnerRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type OwnerMessage struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OwnerMessage) Reset()         { *m = OwnerMessage{} }
func (m *OwnerMessage) String() string { return proto.CompactTextString(m) }
func (*OwnerMessage) ProtoMessage()    {}
func (*OwnerMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_2141552de9bf11d0, []int{1}
}

func (m *OwnerMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OwnerMessage.Unmarshal(m, b)
}
func (m *OwnerMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OwnerMessage.Marshal(b, m, deterministic)
}
func (m *OwnerMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OwnerMessage.Merge(m, src)
}
func (m *OwnerMessage) XXX_Size() int {
	return xxx_messageInfo_OwnerMessage.Size(m)
}
func (m *OwnerMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_OwnerMessage.DiscardUnknown(m)
}

var xxx_messageInfo_OwnerMessage proto.InternalMessageInfo

func (m *OwnerMessage) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*ProductOwnerRequest)(nil), "sample.ProductOwnerRequest")
	proto.RegisterType((*OwnerMessage)(nil), "sample.OwnerMessage")
}

func init() { proto.RegisterFile("sample.proto", fileDescriptor_2141552de9bf11d0) }

var fileDescriptor_2141552de9bf11d0 = []byte{
	// 141 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x29, 0x4e, 0xcc, 0x2d,
	0xc8, 0x49, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x83, 0xf0, 0x94, 0x34, 0xb9, 0x84,
	0x03, 0x8a, 0xf2, 0x53, 0x4a, 0x93, 0x4b, 0xfc, 0xcb, 0xf3, 0x52, 0x8b, 0x82, 0x52, 0x0b, 0x4b,
	0x53, 0x8b, 0x4b, 0x84, 0x84, 0xb8, 0x58, 0xf2, 0x12, 0x73, 0x53, 0x25, 0x18, 0x15, 0x18, 0x35,
	0x38, 0x83, 0xc0, 0x6c, 0x25, 0x0d, 0x2e, 0x1e, 0xb0, 0x1a, 0xdf, 0xd4, 0xe2, 0xe2, 0xc4, 0xf4,
	0x54, 0x21, 0x09, 0x2e, 0xf6, 0x5c, 0x08, 0x13, 0xaa, 0x0c, 0xc6, 0x35, 0xf2, 0xe1, 0xe2, 0x41,
	0x36, 0x54, 0xc8, 0x86, 0x8b, 0x3d, 0x38, 0xb1, 0xd2, 0x2f, 0x31, 0x37, 0x55, 0x48, 0x5a, 0x0f,
	0xea, 0x0c, 0x2c, 0xb6, 0x4a, 0x89, 0xc0, 0x24, 0x91, 0xed, 0x49, 0x62, 0x03, 0xbb, 0xd8, 0x18,
	0x10, 0x00, 0x00, 0xff, 0xff, 0xcc, 0xd9, 0x00, 0xf0, 0xc1, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ProductOwnerClient is the client API for ProductOwner service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProductOwnerClient interface {
	SayName(ctx context.Context, in *ProductOwnerRequest, opts ...grpc.CallOption) (*OwnerMessage, error)
}

type productOwnerClient struct {
	cc grpc.ClientConnInterface
}

func NewProductOwnerClient(cc grpc.ClientConnInterface) ProductOwnerClient {
	return &productOwnerClient{cc}
}

func (c *productOwnerClient) SayName(ctx context.Context, in *ProductOwnerRequest, opts ...grpc.CallOption) (*OwnerMessage, error) {
	out := new(OwnerMessage)
	err := c.cc.Invoke(ctx, "/sample.ProductOwner/SayName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProductOwnerServer is the server API for ProductOwner service.
type ProductOwnerServer interface {
	SayName(context.Context, *ProductOwnerRequest) (*OwnerMessage, error)
}

// UnimplementedProductOwnerServer can be embedded to have forward compatible implementations.
type UnimplementedProductOwnerServer struct {
}

func (*UnimplementedProductOwnerServer) SayName(ctx context.Context, req *ProductOwnerRequest) (*OwnerMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SayName not implemented")
}

func RegisterProductOwnerServer(s *grpc.Server, srv ProductOwnerServer) {
	s.RegisterService(&_ProductOwner_serviceDesc, srv)
}

func _ProductOwner_SayName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProductOwnerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductOwnerServer).SayName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sample.ProductOwner/SayName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductOwnerServer).SayName(ctx, req.(*ProductOwnerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ProductOwner_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sample.ProductOwner",
	HandlerType: (*ProductOwnerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SayName",
			Handler:    _ProductOwner_SayName_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sample.proto",
}
